version: '3.8'

services:
  # Servicio de aplicaci√≥n Java
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: webhook-service
    restart: unless-stopped
    ports:
      - "8010:8010"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/webhook_db
      - SPRING_DATASOURCE_USERNAME=webhook_user
      - SPRING_DATASOURCE_PASSWORD=webhook_password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=false
      - DB_USERNAME=webhook_user
      - DB_PASSWORD=webhook_password
      - DB_NAME=webhook_db
      - DB_HOST=db
      - DB_PORT=5432
    depends_on:
      - db
    networks:
      - webhook-network
    volumes:
      - app-logs:/logs

  # Base de datos PostgreSQL
  db:
    image: postgres:15-alpine
    container_name: webhook-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=webhook_user
      - POSTGRES_PASSWORD=webhook_password
      - POSTGRES_DB=webhook_db
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - webhook-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U webhook_user -d webhook_db"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  webhook-network:
    driver: bridge

volumes:
  postgres-data:
  app-logs:
